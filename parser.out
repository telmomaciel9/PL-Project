Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> FT
Rule 1     FT -> Section_list
Rule 2     Section_list -> Section Section_list
Rule 3     Section_list -> Section
Rule 4     Section -> LBRACKET Section_name RBRACKET Section_content
Rule 5     Section -> LBRACKET Section_name RBRACKET Subsection
Rule 6     Section -> Content
Rule 7     Section -> Table
Rule 8     Table -> LBRACKET LBRACKET Section_name RBRACKET RBRACKET Section_content Table
Rule 9     Table -> LBRACKET LBRACKET Section_name RBRACKET RBRACKET Section_content
Rule 10    Subsection -> LBRACKET Subsection_name RBRACKET Section_content Subsection
Rule 11    Subsection -> LBRACKET Subsection_name RBRACKET Section_content
Rule 12    Section_name -> OBJECT
Rule 13    Subsection_name -> SUBOBJECT
Rule 14    Section_content -> Content Section_content
Rule 15    Section_content -> Content
Rule 16    Section_content -> COMMENT
Rule 17    Content -> Key EQUALS Value
Rule 18    Key -> KEY
Rule 19    Value -> BASIC_STRING
Rule 20    Value -> LITERAL_STRING
Rule 21    Value -> STRING
Rule 22    Value -> NUMBER
Rule 23    Value -> IP
Rule 24    Value -> DATE
Rule 25    Value -> TIME
Rule 26    Value -> BOOLEAN
Rule 27    Value -> Array
Rule 28    Value -> DATE_TIME
Rule 29    Array -> LBRACKET Value_list RBRACKET
Rule 30    Value_list -> Value COMMA Value_list
Rule 31    Value_list -> Value

Terminals, with rules where they appear

BASIC_STRING         : 19
BOOLEAN              : 26
COMMA                : 30
COMMENT              : 16
DATE                 : 24
DATE_TIME            : 28
EQUALS               : 17
IP                   : 23
KEY                  : 18
LBRACKET             : 4 5 8 8 9 9 10 11 29
LITERAL_STRING       : 20
NUMBER               : 22
OBJECT               : 12
RBRACKET             : 4 5 8 8 9 9 10 11 29
STRING               : 21
SUBOBJECT            : 13
TIME                 : 25
error                : 

Nonterminals, with rules where they appear

Array                : 27
Content              : 6 14 15
FT                   : 0
Key                  : 17
Section              : 2 3
Section_content      : 4 8 9 10 11 14
Section_list         : 1 2
Section_name         : 4 5 8 9
Subsection           : 5 10
Subsection_name      : 10 11
Table                : 7 8
Value                : 17 30 31
Value_list           : 29 30

Parsing method: LALR

state 0

    (0) S' -> . FT
    (1) FT -> . Section_list
    (2) Section_list -> . Section Section_list
    (3) Section_list -> . Section
    (4) Section -> . LBRACKET Section_name RBRACKET Section_content
    (5) Section -> . LBRACKET Section_name RBRACKET Subsection
    (6) Section -> . Content
    (7) Section -> . Table
    (17) Content -> . Key EQUALS Value
    (8) Table -> . LBRACKET LBRACKET Section_name RBRACKET RBRACKET Section_content Table
    (9) Table -> . LBRACKET LBRACKET Section_name RBRACKET RBRACKET Section_content
    (18) Key -> . KEY

    LBRACKET        shift and go to state 4
    KEY             shift and go to state 8

    FT                             shift and go to state 1
    Section_list                   shift and go to state 2
    Section                        shift and go to state 3
    Content                        shift and go to state 5
    Table                          shift and go to state 6
    Key                            shift and go to state 7

state 1

    (0) S' -> FT .



state 2

    (1) FT -> Section_list .

    $end            reduce using rule 1 (FT -> Section_list .)


state 3

    (2) Section_list -> Section . Section_list
    (3) Section_list -> Section .
    (2) Section_list -> . Section Section_list
    (3) Section_list -> . Section
    (4) Section -> . LBRACKET Section_name RBRACKET Section_content
    (5) Section -> . LBRACKET Section_name RBRACKET Subsection
    (6) Section -> . Content
    (7) Section -> . Table
    (17) Content -> . Key EQUALS Value
    (8) Table -> . LBRACKET LBRACKET Section_name RBRACKET RBRACKET Section_content Table
    (9) Table -> . LBRACKET LBRACKET Section_name RBRACKET RBRACKET Section_content
    (18) Key -> . KEY

    $end            reduce using rule 3 (Section_list -> Section .)
    LBRACKET        shift and go to state 4
    KEY             shift and go to state 8

    Section                        shift and go to state 3
    Section_list                   shift and go to state 9
    Content                        shift and go to state 5
    Table                          shift and go to state 6
    Key                            shift and go to state 7

state 4

    (4) Section -> LBRACKET . Section_name RBRACKET Section_content
    (5) Section -> LBRACKET . Section_name RBRACKET Subsection
    (8) Table -> LBRACKET . LBRACKET Section_name RBRACKET RBRACKET Section_content Table
    (9) Table -> LBRACKET . LBRACKET Section_name RBRACKET RBRACKET Section_content
    (12) Section_name -> . OBJECT

    LBRACKET        shift and go to state 10
    OBJECT          shift and go to state 12

    Section_name                   shift and go to state 11

state 5

    (6) Section -> Content .

    LBRACKET        reduce using rule 6 (Section -> Content .)
    KEY             reduce using rule 6 (Section -> Content .)
    $end            reduce using rule 6 (Section -> Content .)


state 6

    (7) Section -> Table .

    LBRACKET        reduce using rule 7 (Section -> Table .)
    KEY             reduce using rule 7 (Section -> Table .)
    $end            reduce using rule 7 (Section -> Table .)


state 7

    (17) Content -> Key . EQUALS Value

    EQUALS          shift and go to state 13


state 8

    (18) Key -> KEY .

    EQUALS          reduce using rule 18 (Key -> KEY .)


state 9

    (2) Section_list -> Section Section_list .

    $end            reduce using rule 2 (Section_list -> Section Section_list .)


state 10

    (8) Table -> LBRACKET LBRACKET . Section_name RBRACKET RBRACKET Section_content Table
    (9) Table -> LBRACKET LBRACKET . Section_name RBRACKET RBRACKET Section_content
    (12) Section_name -> . OBJECT

    OBJECT          shift and go to state 12

    Section_name                   shift and go to state 14

state 11

    (4) Section -> LBRACKET Section_name . RBRACKET Section_content
    (5) Section -> LBRACKET Section_name . RBRACKET Subsection

    RBRACKET        shift and go to state 15


state 12

    (12) Section_name -> OBJECT .

    RBRACKET        reduce using rule 12 (Section_name -> OBJECT .)


state 13

    (17) Content -> Key EQUALS . Value
    (19) Value -> . BASIC_STRING
    (20) Value -> . LITERAL_STRING
    (21) Value -> . STRING
    (22) Value -> . NUMBER
    (23) Value -> . IP
    (24) Value -> . DATE
    (25) Value -> . TIME
    (26) Value -> . BOOLEAN
    (27) Value -> . Array
    (28) Value -> . DATE_TIME
    (29) Array -> . LBRACKET Value_list RBRACKET

    BASIC_STRING    shift and go to state 17
    LITERAL_STRING  shift and go to state 18
    STRING          shift and go to state 19
    NUMBER          shift and go to state 20
    IP              shift and go to state 21
    DATE            shift and go to state 22
    TIME            shift and go to state 23
    BOOLEAN         shift and go to state 24
    DATE_TIME       shift and go to state 26
    LBRACKET        shift and go to state 27

    Value                          shift and go to state 16
    Array                          shift and go to state 25

state 14

    (8) Table -> LBRACKET LBRACKET Section_name . RBRACKET RBRACKET Section_content Table
    (9) Table -> LBRACKET LBRACKET Section_name . RBRACKET RBRACKET Section_content

    RBRACKET        shift and go to state 28


state 15

    (4) Section -> LBRACKET Section_name RBRACKET . Section_content
    (5) Section -> LBRACKET Section_name RBRACKET . Subsection
    (14) Section_content -> . Content Section_content
    (15) Section_content -> . Content
    (16) Section_content -> . COMMENT
    (10) Subsection -> . LBRACKET Subsection_name RBRACKET Section_content Subsection
    (11) Subsection -> . LBRACKET Subsection_name RBRACKET Section_content
    (17) Content -> . Key EQUALS Value
    (18) Key -> . KEY

    COMMENT         shift and go to state 33
    LBRACKET        shift and go to state 29
    KEY             shift and go to state 8

    Section_content                shift and go to state 30
    Subsection                     shift and go to state 31
    Content                        shift and go to state 32
    Key                            shift and go to state 7

state 16

    (17) Content -> Key EQUALS Value .

    LBRACKET        reduce using rule 17 (Content -> Key EQUALS Value .)
    KEY             reduce using rule 17 (Content -> Key EQUALS Value .)
    $end            reduce using rule 17 (Content -> Key EQUALS Value .)
    COMMENT         reduce using rule 17 (Content -> Key EQUALS Value .)


state 17

    (19) Value -> BASIC_STRING .

    LBRACKET        reduce using rule 19 (Value -> BASIC_STRING .)
    KEY             reduce using rule 19 (Value -> BASIC_STRING .)
    $end            reduce using rule 19 (Value -> BASIC_STRING .)
    COMMENT         reduce using rule 19 (Value -> BASIC_STRING .)
    COMMA           reduce using rule 19 (Value -> BASIC_STRING .)
    RBRACKET        reduce using rule 19 (Value -> BASIC_STRING .)


state 18

    (20) Value -> LITERAL_STRING .

    LBRACKET        reduce using rule 20 (Value -> LITERAL_STRING .)
    KEY             reduce using rule 20 (Value -> LITERAL_STRING .)
    $end            reduce using rule 20 (Value -> LITERAL_STRING .)
    COMMENT         reduce using rule 20 (Value -> LITERAL_STRING .)
    COMMA           reduce using rule 20 (Value -> LITERAL_STRING .)
    RBRACKET        reduce using rule 20 (Value -> LITERAL_STRING .)


state 19

    (21) Value -> STRING .

    LBRACKET        reduce using rule 21 (Value -> STRING .)
    KEY             reduce using rule 21 (Value -> STRING .)
    $end            reduce using rule 21 (Value -> STRING .)
    COMMENT         reduce using rule 21 (Value -> STRING .)
    COMMA           reduce using rule 21 (Value -> STRING .)
    RBRACKET        reduce using rule 21 (Value -> STRING .)


state 20

    (22) Value -> NUMBER .

    LBRACKET        reduce using rule 22 (Value -> NUMBER .)
    KEY             reduce using rule 22 (Value -> NUMBER .)
    $end            reduce using rule 22 (Value -> NUMBER .)
    COMMENT         reduce using rule 22 (Value -> NUMBER .)
    COMMA           reduce using rule 22 (Value -> NUMBER .)
    RBRACKET        reduce using rule 22 (Value -> NUMBER .)


state 21

    (23) Value -> IP .

    LBRACKET        reduce using rule 23 (Value -> IP .)
    KEY             reduce using rule 23 (Value -> IP .)
    $end            reduce using rule 23 (Value -> IP .)
    COMMENT         reduce using rule 23 (Value -> IP .)
    COMMA           reduce using rule 23 (Value -> IP .)
    RBRACKET        reduce using rule 23 (Value -> IP .)


state 22

    (24) Value -> DATE .

    LBRACKET        reduce using rule 24 (Value -> DATE .)
    KEY             reduce using rule 24 (Value -> DATE .)
    $end            reduce using rule 24 (Value -> DATE .)
    COMMENT         reduce using rule 24 (Value -> DATE .)
    COMMA           reduce using rule 24 (Value -> DATE .)
    RBRACKET        reduce using rule 24 (Value -> DATE .)


state 23

    (25) Value -> TIME .

    LBRACKET        reduce using rule 25 (Value -> TIME .)
    KEY             reduce using rule 25 (Value -> TIME .)
    $end            reduce using rule 25 (Value -> TIME .)
    COMMENT         reduce using rule 25 (Value -> TIME .)
    COMMA           reduce using rule 25 (Value -> TIME .)
    RBRACKET        reduce using rule 25 (Value -> TIME .)


state 24

    (26) Value -> BOOLEAN .

    LBRACKET        reduce using rule 26 (Value -> BOOLEAN .)
    KEY             reduce using rule 26 (Value -> BOOLEAN .)
    $end            reduce using rule 26 (Value -> BOOLEAN .)
    COMMENT         reduce using rule 26 (Value -> BOOLEAN .)
    COMMA           reduce using rule 26 (Value -> BOOLEAN .)
    RBRACKET        reduce using rule 26 (Value -> BOOLEAN .)


state 25

    (27) Value -> Array .

    LBRACKET        reduce using rule 27 (Value -> Array .)
    KEY             reduce using rule 27 (Value -> Array .)
    $end            reduce using rule 27 (Value -> Array .)
    COMMENT         reduce using rule 27 (Value -> Array .)
    COMMA           reduce using rule 27 (Value -> Array .)
    RBRACKET        reduce using rule 27 (Value -> Array .)


state 26

    (28) Value -> DATE_TIME .

    LBRACKET        reduce using rule 28 (Value -> DATE_TIME .)
    KEY             reduce using rule 28 (Value -> DATE_TIME .)
    $end            reduce using rule 28 (Value -> DATE_TIME .)
    COMMENT         reduce using rule 28 (Value -> DATE_TIME .)
    COMMA           reduce using rule 28 (Value -> DATE_TIME .)
    RBRACKET        reduce using rule 28 (Value -> DATE_TIME .)


state 27

    (29) Array -> LBRACKET . Value_list RBRACKET
    (30) Value_list -> . Value COMMA Value_list
    (31) Value_list -> . Value
    (19) Value -> . BASIC_STRING
    (20) Value -> . LITERAL_STRING
    (21) Value -> . STRING
    (22) Value -> . NUMBER
    (23) Value -> . IP
    (24) Value -> . DATE
    (25) Value -> . TIME
    (26) Value -> . BOOLEAN
    (27) Value -> . Array
    (28) Value -> . DATE_TIME
    (29) Array -> . LBRACKET Value_list RBRACKET

    BASIC_STRING    shift and go to state 17
    LITERAL_STRING  shift and go to state 18
    STRING          shift and go to state 19
    NUMBER          shift and go to state 20
    IP              shift and go to state 21
    DATE            shift and go to state 22
    TIME            shift and go to state 23
    BOOLEAN         shift and go to state 24
    DATE_TIME       shift and go to state 26
    LBRACKET        shift and go to state 27

    Value_list                     shift and go to state 34
    Value                          shift and go to state 35
    Array                          shift and go to state 25

state 28

    (8) Table -> LBRACKET LBRACKET Section_name RBRACKET . RBRACKET Section_content Table
    (9) Table -> LBRACKET LBRACKET Section_name RBRACKET . RBRACKET Section_content

    RBRACKET        shift and go to state 36


state 29

    (10) Subsection -> LBRACKET . Subsection_name RBRACKET Section_content Subsection
    (11) Subsection -> LBRACKET . Subsection_name RBRACKET Section_content
    (13) Subsection_name -> . SUBOBJECT

    SUBOBJECT       shift and go to state 38

    Subsection_name                shift and go to state 37

state 30

    (4) Section -> LBRACKET Section_name RBRACKET Section_content .

    LBRACKET        reduce using rule 4 (Section -> LBRACKET Section_name RBRACKET Section_content .)
    KEY             reduce using rule 4 (Section -> LBRACKET Section_name RBRACKET Section_content .)
    $end            reduce using rule 4 (Section -> LBRACKET Section_name RBRACKET Section_content .)


state 31

    (5) Section -> LBRACKET Section_name RBRACKET Subsection .

    LBRACKET        reduce using rule 5 (Section -> LBRACKET Section_name RBRACKET Subsection .)
    KEY             reduce using rule 5 (Section -> LBRACKET Section_name RBRACKET Subsection .)
    $end            reduce using rule 5 (Section -> LBRACKET Section_name RBRACKET Subsection .)


state 32

    (14) Section_content -> Content . Section_content
    (15) Section_content -> Content .
    (14) Section_content -> . Content Section_content
    (15) Section_content -> . Content
    (16) Section_content -> . COMMENT
    (17) Content -> . Key EQUALS Value
    (18) Key -> . KEY

  ! shift/reduce conflict for KEY resolved as shift
    LBRACKET        reduce using rule 15 (Section_content -> Content .)
    $end            reduce using rule 15 (Section_content -> Content .)
    COMMENT         shift and go to state 33
    KEY             shift and go to state 8

  ! KEY             [ reduce using rule 15 (Section_content -> Content .) ]

    Content                        shift and go to state 32
    Section_content                shift and go to state 39
    Key                            shift and go to state 7

state 33

    (16) Section_content -> COMMENT .

    LBRACKET        reduce using rule 16 (Section_content -> COMMENT .)
    KEY             reduce using rule 16 (Section_content -> COMMENT .)
    $end            reduce using rule 16 (Section_content -> COMMENT .)


state 34

    (29) Array -> LBRACKET Value_list . RBRACKET

    RBRACKET        shift and go to state 40


state 35

    (30) Value_list -> Value . COMMA Value_list
    (31) Value_list -> Value .

    COMMA           shift and go to state 41
    RBRACKET        reduce using rule 31 (Value_list -> Value .)


state 36

    (8) Table -> LBRACKET LBRACKET Section_name RBRACKET RBRACKET . Section_content Table
    (9) Table -> LBRACKET LBRACKET Section_name RBRACKET RBRACKET . Section_content
    (14) Section_content -> . Content Section_content
    (15) Section_content -> . Content
    (16) Section_content -> . COMMENT
    (17) Content -> . Key EQUALS Value
    (18) Key -> . KEY

    COMMENT         shift and go to state 33
    KEY             shift and go to state 8

    Section_content                shift and go to state 42
    Content                        shift and go to state 32
    Key                            shift and go to state 7

state 37

    (10) Subsection -> LBRACKET Subsection_name . RBRACKET Section_content Subsection
    (11) Subsection -> LBRACKET Subsection_name . RBRACKET Section_content

    RBRACKET        shift and go to state 43


state 38

    (13) Subsection_name -> SUBOBJECT .

    RBRACKET        reduce using rule 13 (Subsection_name -> SUBOBJECT .)


state 39

    (14) Section_content -> Content Section_content .

    LBRACKET        reduce using rule 14 (Section_content -> Content Section_content .)
    KEY             reduce using rule 14 (Section_content -> Content Section_content .)
    $end            reduce using rule 14 (Section_content -> Content Section_content .)


state 40

    (29) Array -> LBRACKET Value_list RBRACKET .

    LBRACKET        reduce using rule 29 (Array -> LBRACKET Value_list RBRACKET .)
    KEY             reduce using rule 29 (Array -> LBRACKET Value_list RBRACKET .)
    $end            reduce using rule 29 (Array -> LBRACKET Value_list RBRACKET .)
    COMMENT         reduce using rule 29 (Array -> LBRACKET Value_list RBRACKET .)
    COMMA           reduce using rule 29 (Array -> LBRACKET Value_list RBRACKET .)
    RBRACKET        reduce using rule 29 (Array -> LBRACKET Value_list RBRACKET .)


state 41

    (30) Value_list -> Value COMMA . Value_list
    (30) Value_list -> . Value COMMA Value_list
    (31) Value_list -> . Value
    (19) Value -> . BASIC_STRING
    (20) Value -> . LITERAL_STRING
    (21) Value -> . STRING
    (22) Value -> . NUMBER
    (23) Value -> . IP
    (24) Value -> . DATE
    (25) Value -> . TIME
    (26) Value -> . BOOLEAN
    (27) Value -> . Array
    (28) Value -> . DATE_TIME
    (29) Array -> . LBRACKET Value_list RBRACKET

    BASIC_STRING    shift and go to state 17
    LITERAL_STRING  shift and go to state 18
    STRING          shift and go to state 19
    NUMBER          shift and go to state 20
    IP              shift and go to state 21
    DATE            shift and go to state 22
    TIME            shift and go to state 23
    BOOLEAN         shift and go to state 24
    DATE_TIME       shift and go to state 26
    LBRACKET        shift and go to state 27

    Value                          shift and go to state 35
    Value_list                     shift and go to state 44
    Array                          shift and go to state 25

state 42

    (8) Table -> LBRACKET LBRACKET Section_name RBRACKET RBRACKET Section_content . Table
    (9) Table -> LBRACKET LBRACKET Section_name RBRACKET RBRACKET Section_content .
    (8) Table -> . LBRACKET LBRACKET Section_name RBRACKET RBRACKET Section_content Table
    (9) Table -> . LBRACKET LBRACKET Section_name RBRACKET RBRACKET Section_content

  ! shift/reduce conflict for LBRACKET resolved as shift
    KEY             reduce using rule 9 (Table -> LBRACKET LBRACKET Section_name RBRACKET RBRACKET Section_content .)
    $end            reduce using rule 9 (Table -> LBRACKET LBRACKET Section_name RBRACKET RBRACKET Section_content .)
    LBRACKET        shift and go to state 45

  ! LBRACKET        [ reduce using rule 9 (Table -> LBRACKET LBRACKET Section_name RBRACKET RBRACKET Section_content .) ]

    Table                          shift and go to state 46

state 43

    (10) Subsection -> LBRACKET Subsection_name RBRACKET . Section_content Subsection
    (11) Subsection -> LBRACKET Subsection_name RBRACKET . Section_content
    (14) Section_content -> . Content Section_content
    (15) Section_content -> . Content
    (16) Section_content -> . COMMENT
    (17) Content -> . Key EQUALS Value
    (18) Key -> . KEY

    COMMENT         shift and go to state 33
    KEY             shift and go to state 8

    Section_content                shift and go to state 47
    Content                        shift and go to state 32
    Key                            shift and go to state 7

state 44

    (30) Value_list -> Value COMMA Value_list .

    RBRACKET        reduce using rule 30 (Value_list -> Value COMMA Value_list .)


state 45

    (8) Table -> LBRACKET . LBRACKET Section_name RBRACKET RBRACKET Section_content Table
    (9) Table -> LBRACKET . LBRACKET Section_name RBRACKET RBRACKET Section_content

    LBRACKET        shift and go to state 10


state 46

    (8) Table -> LBRACKET LBRACKET Section_name RBRACKET RBRACKET Section_content Table .

    LBRACKET        reduce using rule 8 (Table -> LBRACKET LBRACKET Section_name RBRACKET RBRACKET Section_content Table .)
    KEY             reduce using rule 8 (Table -> LBRACKET LBRACKET Section_name RBRACKET RBRACKET Section_content Table .)
    $end            reduce using rule 8 (Table -> LBRACKET LBRACKET Section_name RBRACKET RBRACKET Section_content Table .)


state 47

    (10) Subsection -> LBRACKET Subsection_name RBRACKET Section_content . Subsection
    (11) Subsection -> LBRACKET Subsection_name RBRACKET Section_content .
    (10) Subsection -> . LBRACKET Subsection_name RBRACKET Section_content Subsection
    (11) Subsection -> . LBRACKET Subsection_name RBRACKET Section_content

  ! shift/reduce conflict for LBRACKET resolved as shift
    KEY             reduce using rule 11 (Subsection -> LBRACKET Subsection_name RBRACKET Section_content .)
    $end            reduce using rule 11 (Subsection -> LBRACKET Subsection_name RBRACKET Section_content .)
    LBRACKET        shift and go to state 29

  ! LBRACKET        [ reduce using rule 11 (Subsection -> LBRACKET Subsection_name RBRACKET Section_content .) ]

    Subsection                     shift and go to state 48

state 48

    (10) Subsection -> LBRACKET Subsection_name RBRACKET Section_content Subsection .

    LBRACKET        reduce using rule 10 (Subsection -> LBRACKET Subsection_name RBRACKET Section_content Subsection .)
    KEY             reduce using rule 10 (Subsection -> LBRACKET Subsection_name RBRACKET Section_content Subsection .)
    $end            reduce using rule 10 (Subsection -> LBRACKET Subsection_name RBRACKET Section_content Subsection .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for KEY in state 32 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 42 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 47 resolved as shift
