Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> FT
Rule 1     FT -> Section_list
Rule 2     Section_list -> Section Section_list
Rule 3     Section_list -> Section
Rule 4     Section -> LBRACKET Section_name RBRACKET Section_content
Rule 5     Section -> LBRACKET Section_name RBRACKET Subsection
Rule 6     Section -> Content
Rule 7     Subsection -> LBRACKET Subsection_name RBRACKET Section_content
Rule 8     Section_name -> OBJECT
Rule 9     Subsection_name -> SUBOBJECT
Rule 10    Section_content -> Content Section_content
Rule 11    Section_content -> Content
Rule 12    Section_content -> COMMENT
Rule 13    Content -> Key EQUALS Value
Rule 14    Key -> KEY
Rule 15    Value -> STRING
Rule 16    Value -> NUMBER
Rule 17    Value -> IP
Rule 18    Value -> DATE
Rule 19    Value -> TIME
Rule 20    Value -> BOOLEAN
Rule 21    Value -> Array
Rule 22    Array -> LBRACKET Value_list RBRACKET
Rule 23    Value_list -> Value COMMA Value_list
Rule 24    Value_list -> Value

Terminals, with rules where they appear

BOOLEAN              : 20
COMMA                : 23
COMMENT              : 12
DATE                 : 18
EQUALS               : 13
IP                   : 17
KEY                  : 14
LBRACKET             : 4 5 7 22
NUMBER               : 16
OBJECT               : 8
RBRACKET             : 4 5 7 22
STRING               : 15
SUBOBJECT            : 9
TIME                 : 19
error                : 

Nonterminals, with rules where they appear

Array                : 21
Content              : 6 10 11
FT                   : 0
Key                  : 13
Section              : 2 3
Section_content      : 4 7 10
Section_list         : 1 2
Section_name         : 4 5
Subsection           : 5
Subsection_name      : 7
Value                : 13 23 24
Value_list           : 22 23

Parsing method: LALR

state 0

    (0) S' -> . FT
    (1) FT -> . Section_list
    (2) Section_list -> . Section Section_list
    (3) Section_list -> . Section
    (4) Section -> . LBRACKET Section_name RBRACKET Section_content
    (5) Section -> . LBRACKET Section_name RBRACKET Subsection
    (6) Section -> . Content
    (13) Content -> . Key EQUALS Value
    (14) Key -> . KEY

    LBRACKET        shift and go to state 4
    KEY             shift and go to state 7

    FT                             shift and go to state 1
    Section_list                   shift and go to state 2
    Section                        shift and go to state 3
    Content                        shift and go to state 5
    Key                            shift and go to state 6

state 1

    (0) S' -> FT .



state 2

    (1) FT -> Section_list .

    $end            reduce using rule 1 (FT -> Section_list .)


state 3

    (2) Section_list -> Section . Section_list
    (3) Section_list -> Section .
    (2) Section_list -> . Section Section_list
    (3) Section_list -> . Section
    (4) Section -> . LBRACKET Section_name RBRACKET Section_content
    (5) Section -> . LBRACKET Section_name RBRACKET Subsection
    (6) Section -> . Content
    (13) Content -> . Key EQUALS Value
    (14) Key -> . KEY

    $end            reduce using rule 3 (Section_list -> Section .)
    LBRACKET        shift and go to state 4
    KEY             shift and go to state 7

    Section                        shift and go to state 3
    Section_list                   shift and go to state 8
    Content                        shift and go to state 5
    Key                            shift and go to state 6

state 4

    (4) Section -> LBRACKET . Section_name RBRACKET Section_content
    (5) Section -> LBRACKET . Section_name RBRACKET Subsection
    (8) Section_name -> . OBJECT

    OBJECT          shift and go to state 10

    Section_name                   shift and go to state 9

state 5

    (6) Section -> Content .

    LBRACKET        reduce using rule 6 (Section -> Content .)
    KEY             reduce using rule 6 (Section -> Content .)
    $end            reduce using rule 6 (Section -> Content .)


state 6

    (13) Content -> Key . EQUALS Value

    EQUALS          shift and go to state 11


state 7

    (14) Key -> KEY .

    EQUALS          reduce using rule 14 (Key -> KEY .)


state 8

    (2) Section_list -> Section Section_list .

    $end            reduce using rule 2 (Section_list -> Section Section_list .)


state 9

    (4) Section -> LBRACKET Section_name . RBRACKET Section_content
    (5) Section -> LBRACKET Section_name . RBRACKET Subsection

    RBRACKET        shift and go to state 12


state 10

    (8) Section_name -> OBJECT .

    RBRACKET        reduce using rule 8 (Section_name -> OBJECT .)


state 11

    (13) Content -> Key EQUALS . Value
    (15) Value -> . STRING
    (16) Value -> . NUMBER
    (17) Value -> . IP
    (18) Value -> . DATE
    (19) Value -> . TIME
    (20) Value -> . BOOLEAN
    (21) Value -> . Array
    (22) Array -> . LBRACKET Value_list RBRACKET

    STRING          shift and go to state 14
    NUMBER          shift and go to state 15
    IP              shift and go to state 16
    DATE            shift and go to state 17
    TIME            shift and go to state 18
    BOOLEAN         shift and go to state 19
    LBRACKET        shift and go to state 21

    Value                          shift and go to state 13
    Array                          shift and go to state 20

state 12

    (4) Section -> LBRACKET Section_name RBRACKET . Section_content
    (5) Section -> LBRACKET Section_name RBRACKET . Subsection
    (10) Section_content -> . Content Section_content
    (11) Section_content -> . Content
    (12) Section_content -> . COMMENT
    (7) Subsection -> . LBRACKET Subsection_name RBRACKET Section_content
    (13) Content -> . Key EQUALS Value
    (14) Key -> . KEY

    COMMENT         shift and go to state 26
    LBRACKET        shift and go to state 22
    KEY             shift and go to state 7

    Section_content                shift and go to state 23
    Subsection                     shift and go to state 24
    Content                        shift and go to state 25
    Key                            shift and go to state 6

state 13

    (13) Content -> Key EQUALS Value .

    LBRACKET        reduce using rule 13 (Content -> Key EQUALS Value .)
    KEY             reduce using rule 13 (Content -> Key EQUALS Value .)
    $end            reduce using rule 13 (Content -> Key EQUALS Value .)
    COMMENT         reduce using rule 13 (Content -> Key EQUALS Value .)


state 14

    (15) Value -> STRING .

    LBRACKET        reduce using rule 15 (Value -> STRING .)
    KEY             reduce using rule 15 (Value -> STRING .)
    $end            reduce using rule 15 (Value -> STRING .)
    COMMENT         reduce using rule 15 (Value -> STRING .)
    COMMA           reduce using rule 15 (Value -> STRING .)
    RBRACKET        reduce using rule 15 (Value -> STRING .)


state 15

    (16) Value -> NUMBER .

    LBRACKET        reduce using rule 16 (Value -> NUMBER .)
    KEY             reduce using rule 16 (Value -> NUMBER .)
    $end            reduce using rule 16 (Value -> NUMBER .)
    COMMENT         reduce using rule 16 (Value -> NUMBER .)
    COMMA           reduce using rule 16 (Value -> NUMBER .)
    RBRACKET        reduce using rule 16 (Value -> NUMBER .)


state 16

    (17) Value -> IP .

    LBRACKET        reduce using rule 17 (Value -> IP .)
    KEY             reduce using rule 17 (Value -> IP .)
    $end            reduce using rule 17 (Value -> IP .)
    COMMENT         reduce using rule 17 (Value -> IP .)
    COMMA           reduce using rule 17 (Value -> IP .)
    RBRACKET        reduce using rule 17 (Value -> IP .)


state 17

    (18) Value -> DATE .

    LBRACKET        reduce using rule 18 (Value -> DATE .)
    KEY             reduce using rule 18 (Value -> DATE .)
    $end            reduce using rule 18 (Value -> DATE .)
    COMMENT         reduce using rule 18 (Value -> DATE .)
    COMMA           reduce using rule 18 (Value -> DATE .)
    RBRACKET        reduce using rule 18 (Value -> DATE .)


state 18

    (19) Value -> TIME .

    LBRACKET        reduce using rule 19 (Value -> TIME .)
    KEY             reduce using rule 19 (Value -> TIME .)
    $end            reduce using rule 19 (Value -> TIME .)
    COMMENT         reduce using rule 19 (Value -> TIME .)
    COMMA           reduce using rule 19 (Value -> TIME .)
    RBRACKET        reduce using rule 19 (Value -> TIME .)


state 19

    (20) Value -> BOOLEAN .

    LBRACKET        reduce using rule 20 (Value -> BOOLEAN .)
    KEY             reduce using rule 20 (Value -> BOOLEAN .)
    $end            reduce using rule 20 (Value -> BOOLEAN .)
    COMMENT         reduce using rule 20 (Value -> BOOLEAN .)
    COMMA           reduce using rule 20 (Value -> BOOLEAN .)
    RBRACKET        reduce using rule 20 (Value -> BOOLEAN .)


state 20

    (21) Value -> Array .

    LBRACKET        reduce using rule 21 (Value -> Array .)
    KEY             reduce using rule 21 (Value -> Array .)
    $end            reduce using rule 21 (Value -> Array .)
    COMMENT         reduce using rule 21 (Value -> Array .)
    COMMA           reduce using rule 21 (Value -> Array .)
    RBRACKET        reduce using rule 21 (Value -> Array .)


state 21

    (22) Array -> LBRACKET . Value_list RBRACKET
    (23) Value_list -> . Value COMMA Value_list
    (24) Value_list -> . Value
    (15) Value -> . STRING
    (16) Value -> . NUMBER
    (17) Value -> . IP
    (18) Value -> . DATE
    (19) Value -> . TIME
    (20) Value -> . BOOLEAN
    (21) Value -> . Array
    (22) Array -> . LBRACKET Value_list RBRACKET

    STRING          shift and go to state 14
    NUMBER          shift and go to state 15
    IP              shift and go to state 16
    DATE            shift and go to state 17
    TIME            shift and go to state 18
    BOOLEAN         shift and go to state 19
    LBRACKET        shift and go to state 21

    Value_list                     shift and go to state 27
    Value                          shift and go to state 28
    Array                          shift and go to state 20

state 22

    (7) Subsection -> LBRACKET . Subsection_name RBRACKET Section_content
    (9) Subsection_name -> . SUBOBJECT

    SUBOBJECT       shift and go to state 30

    Subsection_name                shift and go to state 29

state 23

    (4) Section -> LBRACKET Section_name RBRACKET Section_content .

    LBRACKET        reduce using rule 4 (Section -> LBRACKET Section_name RBRACKET Section_content .)
    KEY             reduce using rule 4 (Section -> LBRACKET Section_name RBRACKET Section_content .)
    $end            reduce using rule 4 (Section -> LBRACKET Section_name RBRACKET Section_content .)


state 24

    (5) Section -> LBRACKET Section_name RBRACKET Subsection .

    LBRACKET        reduce using rule 5 (Section -> LBRACKET Section_name RBRACKET Subsection .)
    KEY             reduce using rule 5 (Section -> LBRACKET Section_name RBRACKET Subsection .)
    $end            reduce using rule 5 (Section -> LBRACKET Section_name RBRACKET Subsection .)


state 25

    (10) Section_content -> Content . Section_content
    (11) Section_content -> Content .
    (10) Section_content -> . Content Section_content
    (11) Section_content -> . Content
    (12) Section_content -> . COMMENT
    (13) Content -> . Key EQUALS Value
    (14) Key -> . KEY

  ! shift/reduce conflict for KEY resolved as shift
    LBRACKET        reduce using rule 11 (Section_content -> Content .)
    $end            reduce using rule 11 (Section_content -> Content .)
    COMMENT         shift and go to state 26
    KEY             shift and go to state 7

  ! KEY             [ reduce using rule 11 (Section_content -> Content .) ]

    Content                        shift and go to state 25
    Section_content                shift and go to state 31
    Key                            shift and go to state 6

state 26

    (12) Section_content -> COMMENT .

    LBRACKET        reduce using rule 12 (Section_content -> COMMENT .)
    KEY             reduce using rule 12 (Section_content -> COMMENT .)
    $end            reduce using rule 12 (Section_content -> COMMENT .)


state 27

    (22) Array -> LBRACKET Value_list . RBRACKET

    RBRACKET        shift and go to state 32


state 28

    (23) Value_list -> Value . COMMA Value_list
    (24) Value_list -> Value .

    COMMA           shift and go to state 33
    RBRACKET        reduce using rule 24 (Value_list -> Value .)


state 29

    (7) Subsection -> LBRACKET Subsection_name . RBRACKET Section_content

    RBRACKET        shift and go to state 34


state 30

    (9) Subsection_name -> SUBOBJECT .

    RBRACKET        reduce using rule 9 (Subsection_name -> SUBOBJECT .)


state 31

    (10) Section_content -> Content Section_content .

    LBRACKET        reduce using rule 10 (Section_content -> Content Section_content .)
    KEY             reduce using rule 10 (Section_content -> Content Section_content .)
    $end            reduce using rule 10 (Section_content -> Content Section_content .)


state 32

    (22) Array -> LBRACKET Value_list RBRACKET .

    LBRACKET        reduce using rule 22 (Array -> LBRACKET Value_list RBRACKET .)
    KEY             reduce using rule 22 (Array -> LBRACKET Value_list RBRACKET .)
    $end            reduce using rule 22 (Array -> LBRACKET Value_list RBRACKET .)
    COMMENT         reduce using rule 22 (Array -> LBRACKET Value_list RBRACKET .)
    COMMA           reduce using rule 22 (Array -> LBRACKET Value_list RBRACKET .)
    RBRACKET        reduce using rule 22 (Array -> LBRACKET Value_list RBRACKET .)


state 33

    (23) Value_list -> Value COMMA . Value_list
    (23) Value_list -> . Value COMMA Value_list
    (24) Value_list -> . Value
    (15) Value -> . STRING
    (16) Value -> . NUMBER
    (17) Value -> . IP
    (18) Value -> . DATE
    (19) Value -> . TIME
    (20) Value -> . BOOLEAN
    (21) Value -> . Array
    (22) Array -> . LBRACKET Value_list RBRACKET

    STRING          shift and go to state 14
    NUMBER          shift and go to state 15
    IP              shift and go to state 16
    DATE            shift and go to state 17
    TIME            shift and go to state 18
    BOOLEAN         shift and go to state 19
    LBRACKET        shift and go to state 21

    Value                          shift and go to state 28
    Value_list                     shift and go to state 35
    Array                          shift and go to state 20

state 34

    (7) Subsection -> LBRACKET Subsection_name RBRACKET . Section_content
    (10) Section_content -> . Content Section_content
    (11) Section_content -> . Content
    (12) Section_content -> . COMMENT
    (13) Content -> . Key EQUALS Value
    (14) Key -> . KEY

    COMMENT         shift and go to state 26
    KEY             shift and go to state 7

    Section_content                shift and go to state 36
    Content                        shift and go to state 25
    Key                            shift and go to state 6

state 35

    (23) Value_list -> Value COMMA Value_list .

    RBRACKET        reduce using rule 23 (Value_list -> Value COMMA Value_list .)


state 36

    (7) Subsection -> LBRACKET Subsection_name RBRACKET Section_content .

    LBRACKET        reduce using rule 7 (Subsection -> LBRACKET Subsection_name RBRACKET Section_content .)
    KEY             reduce using rule 7 (Subsection -> LBRACKET Subsection_name RBRACKET Section_content .)
    $end            reduce using rule 7 (Subsection -> LBRACKET Subsection_name RBRACKET Section_content .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for KEY in state 25 resolved as shift
